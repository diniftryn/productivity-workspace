{"ast":null,"code":"var _jsxFileName = \"/Users/dini/Desktop/productivity-workspace/frontend/src/components/TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useTasksContext } from \"../hooks/useTasksContext\";\nimport \"./css/TaskForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const {\n    tasks,\n    dispatch\n  } = useTasksContext();\n  const [task, setTask] = useState({\n    description: \"\",\n    isEdit: false,\n    isDone: false\n  });\n  const [error, setError] = useState(\"\");\n  const [emptyFields, setEmptyFields] = useState([]);\n  function handleChange(inputIdentifier, value) {\n    setTask({\n      ...task,\n      [inputIdentifier]: value\n    });\n  }\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // if (!task.description) alert(\"Enter a task\");\n    // else {\n    //   dispatch({ type: \"CREATE_TASK\", payload: { ...task, _id: tasks.length + 1 } });\n    //   setTask({ _id: 0, description: \"\", isEdit: false, isDone: false });\n    //   console.log(tasks);\n    // }\n    // const response = await fetch(\"http://localhost:4000/api/tasks\", {\n    //   method: \"POST\",\n    //   body: JSON.stringify(task),\n    //   headers: {\n    //     Accept: \"application/json\",\n    //     \"Content-Type\": \"application/json\"\n    //   }\n    // });\n    // const json = await response.json();\n\n    // if (!response.ok) {\n    //   setError(json.error);\n    //   setEmptyFields(json.emptyFields);\n    // }\n    // if (response.ok) {\n    //   console.log(\"New task added successfully: \", json);\n    //   setTask({ description: \"\", isEdit: false, isDone: false });\n    //   dispatch({ type: \"CREATE_TASK\", payload: json });\n    // }\n\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(task),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://localhost:4000/api/tasks\", options).then(response => {\n      if (response.ok) {\n        console.log(\"New task added successfully: \", json);\n        setTask({\n          description: \"\",\n          isEdit: false,\n          isDone: false\n        });\n        dispatch({\n          type: \"CREATE_TASK\",\n          payload: json\n        });\n        // return response.json();\n      } else {\n        throw new Error(\"Something went wrong ...\");\n      }\n    }).catch(error => this.setState({\n      error\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: task.description,\n      onChange: e => handleChange(\"description\", e.target.value),\n      className: emptyFields.includes(\"description\") ? \"error\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"2Ac8xWg6KTtLAAtyfu5w7n22yUg=\", false, function () {\n  return [useTasksContext];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useTasksContext","jsxDEV","_jsxDEV","TaskForm","_s","tasks","dispatch","task","setTask","description","isEdit","isDone","error","setError","emptyFields","setEmptyFields","handleChange","inputIdentifier","value","handleSubmit","e","preventDefault","options","method","body","JSON","stringify","headers","fetch","then","response","ok","console","log","json","type","payload","Error","catch","setState","onSubmit","children","onChange","target","className","includes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dini/Desktop/productivity-workspace/frontend/src/components/TaskForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useTasksContext } from \"../hooks/useTasksContext\";\nimport \"./css/TaskForm.css\";\n\nconst TaskForm = () => {\n  const { tasks, dispatch } = useTasksContext();\n  const [task, setTask] = useState({ description: \"\", isEdit: false, isDone: false });\n  const [error, setError] = useState(\"\");\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  function handleChange(inputIdentifier, value) {\n    setTask({ ...task, [inputIdentifier]: value });\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // if (!task.description) alert(\"Enter a task\");\n    // else {\n    //   dispatch({ type: \"CREATE_TASK\", payload: { ...task, _id: tasks.length + 1 } });\n    //   setTask({ _id: 0, description: \"\", isEdit: false, isDone: false });\n    //   console.log(tasks);\n    // }\n    // const response = await fetch(\"http://localhost:4000/api/tasks\", {\n    //   method: \"POST\",\n    //   body: JSON.stringify(task),\n    //   headers: {\n    //     Accept: \"application/json\",\n    //     \"Content-Type\": \"application/json\"\n    //   }\n    // });\n    // const json = await response.json();\n\n    // if (!response.ok) {\n    //   setError(json.error);\n    //   setEmptyFields(json.emptyFields);\n    // }\n    // if (response.ok) {\n    //   console.log(\"New task added successfully: \", json);\n    //   setTask({ description: \"\", isEdit: false, isDone: false });\n    //   dispatch({ type: \"CREATE_TASK\", payload: json });\n    // }\n\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(task),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    await fetch(\"http://localhost:4000/api/tasks\", options)\n      .then(response => {\n        if (response.ok) {\n          console.log(\"New task added successfully: \", json);\n          setTask({ description: \"\", isEdit: false, isDone: false });\n          dispatch({ type: \"CREATE_TASK\", payload: json });\n          // return response.json();\n        } else {\n          throw new Error(\"Something went wrong ...\");\n        }\n      })\n      .catch(error => this.setState({ error }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={task.description} onChange={e => handleChange(\"description\", e.target.value)} className={emptyFields.includes(\"description\") ? \"error\" : \"\"} />\n      <button>Add Task</button>\n      {error && <div className=\"error\">{error}</div>}\n    </form>\n  );\n};\n\nexport default TaskForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}