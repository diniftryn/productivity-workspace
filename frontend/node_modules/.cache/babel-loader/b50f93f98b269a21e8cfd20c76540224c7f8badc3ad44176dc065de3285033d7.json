{"ast":null,"code":"import{useState,useEffect,useRef}from\"react\";import\"../css/PomodoroTimer.css\";import clickStart from\"../assets/clickStart.mp3\";import click from\"../assets/click.mp3\";import alarm from\"../assets/alarm.mp3\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function PomodoroTimer(){const[sessionLength,setSessionLength]=useState(1500);const[breakLength,setBreakLength]=useState(300);const[timer,setTimer]=useState(1500);const[timerMinutes,setTimerMinutes]=useState(\"00\");const[timerSeconds,setTimerSeconds]=useState(\"00\");const[timerIntervalId,setTimerIntervalId]=useState(null);const[isSession,setIsSession]=useState(false);const[sessionType,setSessionType]=useState(\"Session\");const audioRef=useRef();let hasStarted=timerIntervalId!==null;// check timer state\nconst audioRefClickStart=useRef(new Audio(clickStart));const audioRefClick=useRef(new Audio(click));// audioRefClick.current.volume = 0.4;\nconst audioRefAlarm=useRef(new Audio(alarm));// audioRefAlarm.current.volume = 0.4;\n// // update timer display\nuseEffect(()=>{if(timer===0){audioRefAlarm.current.play();if(sessionType===\"Session\"){setSessionType(\"Break\");setTimer(breakLength);}else{setSessionType(\"Session\");setTimer(sessionLength);}}},[timer,sessionType]);useEffect(()=>{setTimer(sessionLength);},[sessionLength]);useEffect(()=>{let time=secondsToTime(timer);setTimerMinutes(time[0]);setTimerSeconds(time[1]);},[timer]);function toggleCountDown(){if(hasStarted){// started mode\nif(timerIntervalId){clearInterval(timerIntervalId);}setTimerIntervalId(null);}else{// stopped mode\n// create accurate date timer with date\nconst newIntervalId=setInterval(()=>{setTimer(prevTime=>{let newTime=prevTime-1;let time=secondsToTime(newTime);setTimerMinutes(time[0]);setTimerSeconds(time[1]);return newTime;});},1000);setTimerIntervalId(newIntervalId);}}// return minutes and seconds of seconds\nfunction secondsToTime(seconds){return[Math.floor(seconds/60),seconds%60];}// zero paddings if < 10\nfunction formatDisplayTime(time){if(time<10){return\"0\".concat(time);}else{return time;}}function handleBreakLengthChange(e){if(hasStarted)return;// guard against change when running\nif(e.target.id===\"break-decrement\"&&breakLength>60){setBreakLength(prevVal=>prevVal-60);}else if(e.target.id===\"break-increment\"&&breakLength<3600){setBreakLength(prevVal=>prevVal+60);}}function handleSessionLengthChange(e){if(hasStarted)return;// guard against change when running\nif(e.target.id===\"session-decrement\"&&sessionLength>60){setSessionLength(prevVal=>prevVal-60);}else if(e.target.id===\"session-increment\"&&sessionLength<3600){setSessionLength(prevVal=>prevVal+60);}}function handleResetTimer(){var _audioRef$current;audioRef===null||audioRef===void 0?void 0:(_audioRef$current=audioRef.current)===null||_audioRef$current===void 0?void 0:_audioRef$current.load();if(timerIntervalId){clearInterval(timerIntervalId);}setTimerIntervalId(null);setSessionLength(1500);setBreakLength(300);setSessionType(\"Session\");setTimer(1500);}return/*#__PURE__*/_jsxs(\"div\",{className:\"Pomodoro\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Pomodoro Timer\"}),/*#__PURE__*/_jsx(\"div\",{className:\"timer\",children:/*#__PURE__*/_jsxs(\"div\",{id:\"time-left\",children:[formatDisplayTime(timerMinutes),\":\",formatDisplayTime(timerSeconds)]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer-control\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"start_stop\",className:\"pomo-btn\",onClick:e=>{if(hasStarted){audioRefClick.current.play();}else{audioRefClickStart.current.play();}toggleCountDown();},children:hasStarted?\"Pause\":\"Start\"}),/*#__PURE__*/_jsx(\"button\",{id:\"reset\",className:\"pomo-btn\",onClick:()=>{audioRefClick.current.play();handleResetTimer();},children:\"Reset\"})]})]});}","map":{"version":3,"names":["useState","useEffect","useRef","clickStart","click","alarm","jsx","_jsx","jsxs","_jsxs","PomodoroTimer","sessionLength","setSessionLength","breakLength","setBreakLength","timer","setTimer","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","timerIntervalId","setTimerIntervalId","isSession","setIsSession","sessionType","setSessionType","audioRef","hasStarted","audioRefClickStart","Audio","audioRefClick","audioRefAlarm","current","play","time","secondsToTime","toggleCountDown","clearInterval","newIntervalId","setInterval","prevTime","newTime","seconds","Math","floor","formatDisplayTime","concat","handleBreakLengthChange","e","target","id","prevVal","handleSessionLengthChange","handleResetTimer","_audioRef$current","load","className","children","onClick"],"sources":["/Users/dini/Desktop/productivity-workspace/frontend/src/components/PomodoroTimer.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport \"../css/PomodoroTimer.css\";\nimport clickStart from \"../assets/clickStart.mp3\";\nimport click from \"../assets/click.mp3\";\nimport alarm from \"../assets/alarm.mp3\";\n\nexport default function PomodoroTimer() {\n  const [sessionLength, setSessionLength] = useState(1500);\n  const [breakLength, setBreakLength] = useState(300);\n\n  const [timer, setTimer] = useState(1500);\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\n  const [timerIntervalId, setTimerIntervalId] = useState(null);\n  const [isSession, setIsSession] = useState(false);\n  const [sessionType, setSessionType] = useState(\"Session\");\n\n  const audioRef = useRef();\n  let hasStarted = timerIntervalId !== null; // check timer state\n\n  const audioRefClickStart = useRef(new Audio(clickStart));\n  const audioRefClick = useRef(new Audio(click));\n  // audioRefClick.current.volume = 0.4;\n  const audioRefAlarm = useRef(new Audio(alarm));\n  // audioRefAlarm.current.volume = 0.4;\n\n  // // update timer display\n  useEffect(() => {\n    if (timer === 0) {\n      audioRefAlarm.current.play();\n      if (sessionType === \"Session\") {\n        setSessionType(\"Break\");\n        setTimer(breakLength);\n      } else {\n        setSessionType(\"Session\");\n        setTimer(sessionLength);\n      }\n    }\n  }, [timer, sessionType]);\n\n  useEffect(() => {\n    setTimer(sessionLength);\n  }, [sessionLength]);\n\n  useEffect(() => {\n    let time = secondsToTime(timer);\n    setTimerMinutes(time[0]);\n    setTimerSeconds(time[1]);\n  }, [timer]);\n\n  function toggleCountDown() {\n    if (hasStarted) {\n      // started mode\n      if (timerIntervalId) {\n        clearInterval(timerIntervalId);\n      }\n      setTimerIntervalId(null);\n    } else {\n      // stopped mode\n      // create accurate date timer with date\n      const newIntervalId = setInterval(() => {\n        setTimer(prevTime => {\n          let newTime = prevTime - 1;\n          let time = secondsToTime(newTime);\n          setTimerMinutes(time[0]);\n          setTimerSeconds(time[1]);\n          return newTime;\n        });\n      }, 1000);\n      setTimerIntervalId(newIntervalId);\n    }\n  }\n\n  // return minutes and seconds of seconds\n  function secondsToTime(seconds) {\n    return [Math.floor(seconds / 60), seconds % 60];\n  }\n\n  // zero paddings if < 10\n  function formatDisplayTime(time) {\n    if (time < 10) {\n      return `0${time}`;\n    } else {\n      return time;\n    }\n  }\n\n  function handleBreakLengthChange(e) {\n    if (hasStarted) return; // guard against change when running\n\n    if (e.target.id === \"break-decrement\" && breakLength > 60) {\n      setBreakLength(prevVal => prevVal - 60);\n    } else if (e.target.id === \"break-increment\" && breakLength < 3600) {\n      setBreakLength(prevVal => prevVal + 60);\n    }\n  }\n\n  function handleSessionLengthChange(e) {\n    if (hasStarted) return; // guard against change when running\n\n    if (e.target.id === \"session-decrement\" && sessionLength > 60) {\n      setSessionLength(prevVal => prevVal - 60);\n    } else if (e.target.id === \"session-increment\" && sessionLength < 3600) {\n      setSessionLength(prevVal => prevVal + 60);\n    }\n  }\n\n  function handleResetTimer() {\n    audioRef?.current?.load();\n    if (timerIntervalId) {\n      clearInterval(timerIntervalId);\n    }\n    setTimerIntervalId(null);\n    setSessionLength(1500);\n    setBreakLength(300);\n    setSessionType(\"Session\");\n    setTimer(1500);\n  }\n\n  return (\n    <div className=\"Pomodoro\">\n      <h2>Pomodoro Timer</h2>\n      {/* Controls */}\n      {/* <div className=\"length-controls\">\n            <div className=\"length-control\">\n              <p id=\"break-label\">Break Length</p>\n              <div className=\"length-control-btns\">\n                <button id=\"break-decrement\" onClick={e => handleBreakLengthChange(e)}>\n                  &lt;\n                </button>\n                <div id=\"break-length\">{Math.floor(breakLength / 60)}</div>\n                <button id=\"break-increment\" onClick={e => handleBreakLengthChange(e)}>\n                  &gt;\n                </button>\n              </div>\n            </div>\n\n            <div className=\"length-control\">\n              <p id=\"session-label\">Session Length</p>\n              <div className=\"length-control-btns\">\n                <button id=\"session-decrement\" onClick={e => handleSessionLengthChange(e)}>\n                  &lt;\n                </button>\n                <div id=\"session-length\">{sessionLength / 60}</div>\n                <button id=\"session-increment\" onClick={e => handleSessionLengthChange(e)}>\n                  &gt;\n                </button>\n              </div>\n            </div>\n          </div> */}\n\n      {/* Timer */}\n      <div className=\"timer\">\n        {/* <p id=\"timer-label\">{sessionType}</p> */}\n        <div id=\"time-left\">\n          {formatDisplayTime(timerMinutes)}:{formatDisplayTime(timerSeconds)}\n        </div>\n      </div>\n\n      <div className=\"timer-control\">\n        <button\n          id=\"start_stop\"\n          className=\"pomo-btn\"\n          onClick={e => {\n            if (hasStarted) {\n              audioRefClick.current.play();\n            } else {\n              audioRefClickStart.current.play();\n            }\n            toggleCountDown();\n          }}\n        >\n          {hasStarted ? \"Pause\" : \"Start\"}\n        </button>\n        <button\n          id=\"reset\"\n          className=\"pomo-btn\"\n          onClick={() => {\n            audioRefClick.current.play();\n            handleResetTimer();\n          }}\n        >\n          Reset\n        </button>\n        {/* <audio id=\"click\" preload=\"auto\" ref={audioRefClick} src=\"https://www.myinstants.com/en/instant/button-click-93467/?utm_source=copy&utm_medium=share\" /> */}\n        {/* <audio id=\"beep\" preload=\"auto\" ref={audioRef} src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\" /> */}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}